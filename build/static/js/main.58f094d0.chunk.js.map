{"version":3,"sources":["components/checkAuthorization.js","components/PrivateRoute.js","assets/sus1.jpg","assets/supe.jpg","utils/CarouselBox.js","pages/Home.js","assets/sas.png","pages/Docs.js","components/authHeader.js","pages/Sensors.js","components/AuthService.js","pages/Registration.js","pages/Entrance.js","components/House.js","components/NewHouse.js","components/Room.js","components/Sensor.js","pages/Token.js","components/NewRoom.js","components/NewSensor.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["checkAuthorization","isAuthorized","localStorage","getItem","PrivateRoute","Component","component","rest","isLoggedIn","render","props","match","params","id","to","pathname","state","from","location","CarouselBox","Carousel","Item","className","src","supe","alt","Caption","Home","style","Container","Docs","class","Tab","defaultActiveKey","Row","Col","sm","Nav","variant","Link","eventKey","Content","Pane","sas","authHeader","token","Authorization","Sensors","error","isLoaded","houses","items","counter","options","Method","headers","Object","assign","console","log","request","Request","fetch","then","res","json","result","setState","length","house","name","house_name","color","house_color","cont","this","marginTop","map","item","href","textDecoration","width","height","username","password","data","login","method","body","JSON","stringify","setItem","removeItem","timezone","timeZone","ok","Entrance2","handleRegister","bind","onChangeUsername","onChangePassword","onChangeTimezone","e","target","value","parseInt","preventDefault","AuthService","register","history","push","window","reload","Form","Group","controlId","Label","Control","type","placeholder","onChange","Check","label","Button","onClick","Entrance","handleLogin","House","houseId","rooms","room","room_name","room_color","NewHouse","sendData","houseName","refs","houseColor","Promise","reject","catch","ref","Alert","Room","roomId","sensors","sensor","Sensor","sensorId","handleToggleClick","a","b","x","start","Date","d1","t1","end","d2","t2","getTime","Number","MAX_SAFE_INTEGER","code","keys","values","i","toLocaleString","sort","compare","line","datasets","fill","backgroundColor","borderColor","scales","yAxes","xAxes","Text","marginBottom","generate","isGenerated","NewRoom","roomName","roomColor","NewSensor","typeId","Header","Navbar","fixed","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","logout","exact","path","Token","exect","Registration","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58f094d0.chunk.js","sourcesContent":["export default function checkAuthorization() {\n    const isAuthorized = localStorage.getItem('isAuthorized');\n    return !!(isAuthorized && isAuthorized == 'true');\n}\n","import React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport checkAuthorization from \"./checkAuthorization\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    let isLoggedIn = checkAuthorization()\r\n\r\n    return (\r\n        <Route {...rest} render={props => isLoggedIn\r\n            ? (\r\n                <Component key={props.match.params.id || 'empty'} {...props} />\r\n            ) : (\r\n                <Redirect to={{ pathname: '/entrance', state: { from: props.location }}} />\r\n            )\r\n        } />\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/sus1.3a1751f0.jpg\";","export default __webpack_public_path__ + \"static/media/supe.e1802968.jpg\";","import React, {Component} from \"react\";\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport supe from '../assets/supe.jpg'\r\n\r\nexport default class CarouselBox extends Component{\r\n    render() {\r\n        return(\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={supe}\r\n                        alt=\"Arduino1\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>SAS project</h3>\r\n                        <p>Платформа, предоставляющая простой способ сохранить ваши данные и визуализировать их</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={supe}\r\n                        alt=\"Pope\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Добавляй датчики</h3>\r\n                        <p>Текст-инструкция по добавлению</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={supe}\r\n                        alt=\"supe\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Отправляй данные</h3>\r\n                        <p>Текст-инструкция по отправке</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={supe}\r\n                        alt=\"supe\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Визуализируй</h3>\r\n                        <p>Текст-инструкция по визуализации</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={supe}\r\n                        alt=\"supe\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>СТASS</h3>\r\n                        <p>Текст для слайда</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport CarouselBox from \"../utils/CarouselBox\";\r\nimport { Container} from \"react-bootstrap\";\r\n\r\nexport default function  Home() {\r\n\r\n        return (\r\n            <>\r\n                <CarouselBox style={{'margin-top': '56px'}}/>\r\n                <Container>\r\n                    <h2 className=\"text-center m-4\">Информация о команде</h2>\r\n                    <div className=\"card-group\">\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" src=\"https://sun4-15.userapi.com/s/v1/if1/JxY5Hnfs_eXJ6it5YWOWgve3zrdPNv1JpYKOwQCRgs9yxe3ei-sW60DC6vwhiQ8thOl9kItV.jpg?size=200x0&quality=96&crop=118,0,695,695&ava=1\" alt=\"Card image cap\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"text-center\">Шевяков Илья</h5>\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a\r\n                                    natural lead-in to additional content. This content is a little bit longer.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" src=\"https://sun4-15.userapi.com/s/v1/if1/wSKDSJzfuEgIIVUKhl56WlC0ydN4cjVlGga60f0gzqcB7RFPkAXDCucMS7AbPsy14xaXqqog.jpg?size=200x0&quality=96&crop=469,0,1707,1707&ava=1\" alt=\"Card image cap\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"text-center\">Кузеванов Владислав</h5>\r\n                                <p className=\"card-text\">This card has supporting text below as a natural lead-in to\r\n                                    additional content.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" src=\"https://sun4-16.userapi.com/s/v1/ig2/4O4DfJ6Ib46HZhtuzaJYIj_RsfPo-d1rQc_IkTrjfUk4aQvpsKeYTVLWjDTe4DFIWDDshyLo-pESgYDiHYP-SJMy.jpg?size=200x0&quality=96&crop=0,0,1080,1080&ava=1\" alt=\"Card image cap\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"text-center\">Кригер Виктория</h5>\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a\r\n                                    natural lead-in to additional content. This card has even longer content than\r\n                                    the first to show that equal height action.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" src=\"https://sun9-40.userapi.com/impg/EBTqQCz9wmaFWevQG33rYAoDosr_Q2rUWELCfg/2wwG2xNJ84I.jpg?size=750x750&quality=96&sign=b89cddbc665090c576b1a6f42f53d753&type=album\" alt=\"Card image cap\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"text-center\">Зеленских Марк</h5>\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a\r\n                                    natural lead-in to additional content. This card has even longer content than\r\n                                    the first to show that equal height action.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" src=\"https://sun4-15.userapi.com/s/v1/if1/1M3R8u-akQgkDv5iX9V3pwAHcYcVZ2BmmcWlb-dGsq-cdNTQ6ztJVThdQt6LHDi2CNK-buUD.jpg?size=200x0&quality=96&crop=0,87,553,553&ava=1\" alt=\"Card image cap\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"text-center\">Дроздов Никита</h5>\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a\r\n                                    natural lead-in to additional content. This card has even longer content than\r\n                                    the first to show that equal height action.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </>\r\n        )\r\n}","export default __webpack_public_path__ + \"static/media/sas.ff7fb911.png\";","import React from \"react\";\r\nimport {Col, Container, Nav, Row, Tab} from \"react-bootstrap\";\r\nimport sas from '../assets/sas.png'\r\n\r\nexport default function  Docs() {\r\n\r\n        return (\r\n            <Container class=\"mt-5\">\r\n                <Tab.Container id=\"ledt-tabs-example\" defaultActiveKey=\"first\">\r\n                    <Row class=\"pt-100\">\r\n                        <Col sm={3}>\r\n                            <Nav variant=\"pills\" className=\"flex-column mt-5\">\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"first\">S</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"second\">T</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"third\">A</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"fourth\">S</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"fifth\">S</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Col>\r\n                        <Col sm={9}>\r\n                            <Tab.Content className=\"mt-5\">\r\n                                <Tab.Pane eventKey=\"first\">\r\n                                    <img src={sas} alt={sas}/>\r\n                                    <p>\r\n                                        Интересный факт номер 1.\r\n                                        За границей все уверены, что Чебурашка – это ОНА.\r\n                                    </p>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"second\">\r\n                                    <img src={sas} alt={sas}/>\r\n                                    <p>\r\n                                        Интересный факт номер 2.\r\n                                        Каждого четвертого американца показывали по телевизору.\r\n                                    </p>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"third\">\r\n                                    <img src={sas} alt={sas}/>\r\n                                    <p>\r\n                                        Интересный факт номер 3.\r\n                                        Чтобы расколоть орех, достаточно положить его в горячую воду на 48 часов.\r\n                                    </p>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"fourth\">\r\n                                    <img src={sas} alt={sas}/>\r\n                                    <p>\r\n                                        Интересный факт номер 4.\r\n                                        Все современные реактивные самолеты способны преодолеть скорость звука.\r\n                                    </p>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"fifth\">\r\n                                    <img src={sas} alt={sas}/>\r\n                                    <p>\r\n                                        Интересный факт номер 0.\r\n                                        Факты были не очень интересны(\r\n                                    </p>\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Col>\r\n                    </Row>\r\n                </Tab.Container>\r\n\r\n            </Container>\r\n        )\r\n}","export default function authHeader() {\n    const token = localStorage.getItem('token');\n    return token ? {Authorization: 'Bearer ' + token} : {};\n}\n","import React, {Component} from \"react\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport authHeader from \"../components/authHeader\";\r\n\r\nexport default class Sensors extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            houses: [],\r\n            items: [],\r\n            counter: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let options = {\r\n            Method: 'GET',\r\n            headers: Object.assign(authHeader(), {\r\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\r\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n            })\r\n        }\r\n        console.log(options)\r\n        let request = new Request(\"http://3.142.115.21/houses\", options)\r\n        fetch(request)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        houses: result.houses\r\n                    });\r\n\r\n                    if(this.state.houses.length == 0){\r\n                        this.setState({isLoaded: true})\r\n                        return\r\n                    }\r\n\r\n                    this.state.counter = 0\r\n                    for (let house of this.state.houses) {\r\n                        request = new Request('http://3.142.115.21/houses/' + house, options)\r\n                        fetch(request)\r\n                            .then(res => res.json())\r\n                            .then(\r\n                                (result) => {\r\n                                    this.state.counter += 1\r\n                                    this.state.items = [...this.state.items, {\r\n                                        id: house, name: result.house_name, color: result.house_color}]\r\n                                    if(this.state.counter == this.state.houses.length) {\r\n                                        this.setState({\r\n                                            isLoaded: true\r\n                                        })\r\n                                    }\r\n                                })\r\n                    }},\r\n                )\r\n    }\r\n\r\n    render() {\r\n\r\n        const { error, isLoaded, items } = this.state;\r\n        let cont;\r\n        if (error) {\r\n            cont = <div>Ошибка: {error}</div>;\r\n        } else if (!isLoaded) {\r\n            cont = <div>Загрузка...</div>;\r\n        } else {\r\n            cont =\r\n                <div className=\"card-deck\">\r\n                    <ul style={{ marginTop: '40px'}}>\r\n                    {items.map(item => (\r\n\r\n                        <div class=\"key={item.id}\">\r\n                            <h4><a href={\"/table/\" + item.id} style={{textDecoration: \"none\"}}>{item.name}</a></h4>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <Container style={{width: '600px', height: '800px', marginTop: '80px'}}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"d-inline\">Дома:</h1>\r\n                            <a href={\"/table/addHouse\"}>\r\n                                <button className=\"btn btn-outline-primary float-end\">Добавить дом</button></a>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {cont}\r\n\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}","import React from \"react\";\n\nclass AuthService{\n\n    login(username, password) {\n        let data = {login:username, password:password}\n        let options = {method: 'POST', headers: {\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Content-type': 'application/json'},\n            body: JSON.stringify(data)}\n\n\n        return fetch(\"http://3.142.115.21/auth\", options)\n            .then(res => res.json())\n            .then(result => {\n                if (result.token !== '') {\n                    localStorage.setItem(\"token\", result.token);\n                    localStorage.setItem(\"isAuthorized\", \"true\");\n                } else {\n                    localStorage.setItem(\"isAuthorized\", \"false\");\n                }\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"token\");\n        localStorage.setItem(\"isAuthorized\", \"false\");\n    }\n\n    register(username, password, timezone) {\n\n        let data = {login:username, password:password, timeZone:timezone}\n        let options = {method: 'POST', headers: {\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Content-type': 'application/json'},\n            body: JSON.stringify(data)}\n\n\n        return fetch(\"http://3.142.115.21/register\", options)\n            .then(res => {\n                return res.ok;\n            })\n    }\n}\n\nexport default new AuthService();","import React, {Component} from \"react\";\nimport {Form, Container, Button} from \"react-bootstrap\";\nimport AuthService from \"../components/AuthService\";\n\nexport default class Entrance2 extends Component {\n\n    constructor(props) {\n        super(props)\n        this.handleRegister = this.handleRegister.bind(this)\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeTimezone = this.onChangeTimezone.bind(this);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            timezone: 0,\n        }\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onChangeTimezone(e) {\n        this.setState({\n            timezone: parseInt(e.target.value)\n        });\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n\n        AuthService.register(this.state.username, this.state.password, this.state.timezone).then(\n            () => {\n                this.props.history.push(\"/entrance\");\n                window.location.reload();\n            })\n    }\n\n\n    render() {\n        return (\n            <>\n                <Container style={{width: '500px'}}>\n                    <h1 className=\"text-center\">Введите данные</h1>\n                    <Form>\n                        <Form.Group controlId=\"formBasicUsername\">\n                            <Form.Label>Имя пользователя</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Введите имя пользователя\"\n                                          onChange={this.onChangeUsername}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>ПАРОЛЬ</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Введите пароль\"\n                                          onChange={this.onChangePassword}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"timeZone\">\n                            <Form.Label>Временная зона</Form.Label>\n                            <Form.Control type=\"timeZone\" placeholder=\"Введите временную зону\"\n                                          onChange={this.onChangeTimezone}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Запомнить меня\"/>\n                        </Form.Group>\n\n                        <Button onClick={this.handleRegister} className=\"primary\">Отправить</Button>\n                    </Form>\n                </Container>\n            </>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Form, Container, Alert, Button} from \"react-bootstrap\";\nimport AuthService from \"../components/AuthService\";\n\nexport default class Entrance extends Component {\n\n    constructor(props) {\n        super(props)\n        this.handleLogin = this.handleLogin.bind(this)\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.state = {\n            username: \"\",\n            password: \"\",\n        }\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        AuthService.login(this.state.username, this.state.password).then(\n            () => {\n                this.props.history.push(\"/table\");\n                window.location.reload();\n            })\n    }\n\n\n    render() {\n        return (\n            <Container style={{width: '500px'}}>\n                <h1 className=\"text-center\">Введите данные</h1>\n                <Form>\n                    <Form.Group controlId=\"formBasicUsername\">\n                        <Form.Label>Имя пользователя</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Введите имя пользователя\"\n                                      onChange={this.onChangeUsername}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>ПАРОЛЬ</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Введите пароль\"\n                                      onChange={this.onChangePassword}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Запомнить меня\"/>\n                    </Form.Group>\n\n                    <Button onClick={this.handleLogin} className=\"primary\">Отправить</Button>\n                </Form>\n            </Container>\n        )\n    }\n}","import React, {Component} from \"react\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport authHeader from \"./authHeader\";\r\n\r\nexport default class House extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: parseInt(props.match.params.houseId, 10),\r\n            error: '',\r\n            isLoaded: false,\r\n            name: '',\r\n            color: '',\r\n            rooms: [],\r\n            items: [],\r\n            counter: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let options = {\r\n            Method: 'GET',\r\n            headers: Object.assign(authHeader(), {\r\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\r\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n            })\r\n        }\r\n\r\n        let request = new Request('http://3.142.115.21/houses/' + this.state.id, options)\r\n        fetch(request)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: false,\r\n                        name: result.house_name,\r\n                        color: result.house_color\r\n                    });\r\n\r\n                    request = new Request('http://3.142.115.21/houses/' + this.state.id + '/rooms', options)\r\n                    fetch(request)\r\n                        .then(res => res.json())\r\n                        .then(\r\n                            (result) => {\r\n                                this.setState({\r\n                                    isLoaded: false,\r\n                                    rooms: result.rooms\r\n                                });\r\n\r\n                                if(this.state.rooms.length == 0){\r\n                                    this.setState({isLoaded: true})\r\n                                    return\r\n                                }\r\n\r\n                                this.state.counter = 0\r\n                                for (let room of this.state.rooms) {\r\n                                    request = new Request('http://3.142.115.21/houses/' + this.state.id + '/rooms/' + room, options)\r\n                                    fetch(request)\r\n                                        .then(res => res.json())\r\n                                        .then(\r\n                                            (result) => {\r\n                                                this.state.counter += 1\r\n                                                console.log(this.state.counter)\r\n                                                this.state.items = [...this.state.items, {id: room, name: result.room_name, color: result.room_color}]\r\n                                                if(this.state.counter == this.state.rooms.length) {\r\n                                                    this.setState({\r\n                                                        isLoaded: true\r\n                                                    })\r\n                                                }\r\n                                            })\r\n                                }},\r\n                            )\r\n                })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id, error, isLoaded, name, color, rooms, items } = this.state;\r\n        let cont;\r\n        if (error) {\r\n            cont = <div>Ошибка: {error}</div>;\r\n        } else if (!isLoaded) {\r\n            cont = <div>Загрузка...</div>;\r\n        } else {\r\n            cont =\r\n                <ul style={{marginTop: '40px'}}>\r\n                    {items.map(item => (\r\n                        <li key={item.id}>\r\n                            <h4><a href={\"/table/\" + id + '/' + item.id} style={{textDecoration: \"none\"}}>{item.name}</a></h4>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Container style={{width: '600px', marginTop: '80px'}}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"d-inline\">{name}</h1>\r\n                            <a href={'/table/' + id + '/addRoom'}><button className=\"btn btn-outline-primary float-end\">Добавить комнату</button></a>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {cont}\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Form, Container, Alert} from \"react-bootstrap\";\r\nimport authHeader from \"./authHeader\";\r\n\r\nexport default class NewHouse extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.sendData = this.sendData.bind(this)\r\n        this.state = {error: false, isLoaded: false}\r\n    }\r\n\r\n    sendData(e){\r\n        e.preventDefault()\r\n        let data = {houseName: this.refs.name.value, houseColor: this.refs.color.value}\r\n\r\n        let options = {\r\n            method: 'POST',\r\n            headers: Object.assign(authHeader(), {\r\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\r\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n                'Content-type': 'application/json'\r\n            }),\r\n            body: JSON.stringify(data)}\r\n        let request = new Request('http://3.142.115.21/houses', options)\r\n        fetch(request)\r\n            .then(res => res.ok ? res : Promise.reject(res))\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error: true\r\n                });\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Container style={{width: '400px', marginTop: '80px'}}>\r\n                    <h1 className=\"text-center\">Добавить дом</h1>\r\n                    <Form className=\"mt-4\">\r\n\r\n                        <Form.Label>Название дома</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"name\" ref=\"name\"/>\r\n                        <Form.Label>Цвет дома</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"color\" ref=\"color\"/>\r\n\r\n                        <button className=\"btn btn-outline-primary float-end mt-2\" onClick={this.sendData}>Отправить</button>\r\n\r\n                        <div style={{marginTop: '60px'}}>\r\n                            {this.state.isLoaded ?\r\n                                (this.state.error == false)\r\n                                    ? <Alert variant=\"success\">Дом успешно добавлен!</Alert>\r\n                                    : <Alert variant=\"danger\">Ошибка!</Alert>\r\n                                : <></>\r\n                            }\r\n                        </div>\r\n                        \r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport authHeader from \"./authHeader\";\r\n\r\nexport default class Room extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            houseId: parseInt(props.match.params.houseId, 10),\r\n            roomId: parseInt(props.match.params.roomId, 10),\r\n            error: '',\r\n            isLoaded: false,\r\n            name: '',\r\n            sensors: [],\r\n            items: [],\r\n            counter: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let options = {\r\n            Method: 'GET',\r\n            headers: Object.assign(authHeader(), {\r\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\r\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n            })\r\n        }\r\n        let request = new Request('http://3.142.115.21/houses/'\r\n            + this.state.houseId + '/rooms/' + this.state.roomId, options)\r\n        fetch(request)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: false,\r\n                        name: result.room_name,\r\n                        color: result.room_color,\r\n                        sensors: result.sensors\r\n                    });\r\n\r\n                    if(this.state.sensors.length == 0){\r\n                        this.setState({isLoaded: true})\r\n                        return\r\n                    }\r\n\r\n                    this.state.counter = 0\r\n                    for (let sensor of this.state.sensors) {\r\n                        request = new Request('http://3.142.115.21/houses/'\r\n                            + this.state.houseId + '/rooms/' + this.state.roomId + '/sensors/' + sensor, options)\r\n                        fetch(request)\r\n                            .then(res => res.json())\r\n                            .then(\r\n                                (result) => {\r\n                                    this.state.counter += 1\r\n                                    this.state.items = [...this.state.items, {id: sensor, name: result.name}]\r\n\r\n                                    if(this.state.counter == this.state.sensors.length) {\r\n                                        this.setState({\r\n                                            isLoaded: true\r\n                                        })\r\n                                    }\r\n                                }\r\n                                )\r\n                    }\r\n                }\r\n                )\r\n    }\r\n\r\n    render() {\r\n\r\n        const { houseId, roomId, error, isLoaded, name, sensors, items } = this.state;\r\n        let cont;\r\n        if (error) {\r\n            cont = <div> Ошибка : {error}</div>;\r\n        } else if (!isLoaded) {\r\n            cont = <div> Загрузка... </div>;\r\n        } else {\r\n            cont =\r\n                <ul style={{marginTop: '40px'}}>\r\n                    {items.map(item => (\r\n                        <li key={item.id}>\r\n                            <h4><a href={\"/table/\" + houseId + '/' + roomId + '/' + item.id}\r\n                                   style={{textDecoration: \"none\"}}>{item.name}</a></h4>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <Container style={{width: '600px', marginTop: '80px'}}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"d-inline\">{name}</h1>\r\n                            <a href={'/table/' + houseId + '/' + roomId + '/addSensor'}>\r\n                                <button className=\"btn btn-outline-primary float-end\">Добавить датчик</button></a>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {cont}\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport authHeader from \"./authHeader\";\r\n\r\nexport default class Sensor extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            houseId: parseInt(props.match.params.houseId, 10),\r\n            roomId: parseInt(props.match.params.roomId, 10),\r\n            sensorId: parseInt(props.match.params.sensorId, 10),\r\n            error: '',\r\n            isLoaded: false,\r\n            name: '',\r\n            items: [],\r\n        }\r\n        this.handleToggleClick = this.handleToggleClick.bind(this)\r\n    }\r\n\r\n    compare(a, b) {\r\n        if (a.x < b.x ) {\r\n            return -1;\r\n        }\r\n        if (a.x > b.x) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    handleToggleClick(e) {\r\n        console.log(this)\r\n        e.preventDefault()\r\n        console.log(this)\r\n        let start = new Date(this.refs.d1.value + \" \" + this.refs.t1.value);\r\n        let end = new Date(this.refs.d2.value + \" \" + this.refs.t2.value);\r\n\r\n        start = (start == 'Invalid Date') ? 0 : start.getTime();\r\n        end = (end == 'Invalid Date') ? Number.MAX_SAFE_INTEGER : end.getTime();\r\n\r\n        console.log(start);\r\n        console.log(end);\r\n\r\n        let request = new Request('http://3.142.115.21/sensors/'\r\n            + this.state.sensorId + '/data?start=' + start + '&end=' + end);\r\n        fetch(request)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n                    if(result.code === 0){\r\n\r\n                        let keys = Object.keys(result.data)\r\n                        let values = Object.values(result.data)\r\n\r\n                        let data = [];\r\n                        for(let i = 0; i < keys.length; i++)\r\n                            data.push({\"x\": (new Date(parseInt(keys[i])).toLocaleString()), \"y\": values[i]})\r\n                        data.sort(this.compare)\r\n\r\n                        this.setState({\r\n                            items: data,\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            items: [],\r\n                        });\r\n                    }\r\n\r\n                    this.refs.line.data = this.state.items\r\n                }\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let options = {\r\n            Method: 'GET',\r\n            headers: Object.assign(authHeader(), {\r\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\r\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n            })\r\n        }\r\n        let request = new Request('http://3.142.115.21/houses/'\r\n            + this.state.houseId + '/rooms/' + this.state.roomId + '/sensors/' + this.state.sensorId, options)\r\n        fetch(request)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: false,\r\n                        name: result.name,\r\n                    });\r\n\r\n\r\n\r\n                    request = new Request('http://3.142.115.21/houses/'\r\n                        + this.state.houseId + '/rooms/' + this.state.roomId + '/sensors/'\r\n                        + this.state.sensorId + '/data', options)\r\n                    fetch(request)\r\n                        .then(res => res.json())\r\n                        .then(\r\n                            (result) => {\r\n                                let keys = Object.keys(result.data)\r\n                                let values = Object.values(result.data)\r\n\r\n                                let data = []\r\n                                for(let i = 0; i < keys.length; i++)\r\n                                    data.push({\"x\": (new Date(parseInt(keys[i])).toLocaleString()), \"y\": values[i]})\r\n                                data.sort(this.compare)\r\n\r\n                                this.setState({\r\n                                    isLoaded: true,\r\n                                    items: data\r\n                                })\r\n                            })\r\n                })\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = {\r\n            datasets: [\r\n                {\r\n                    label: 'Значения',\r\n                    data: this.state.items,\r\n                    fill: false,\r\n                    backgroundColor: '#0d6efd',\r\n                    borderColor: 'rgba(13, 110, 253, 0.2)',\r\n                },\r\n            ],\r\n        };\r\n\r\n        const options = {\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                    },\r\n                ],\r\n                xAxes: [{\r\n                    type: 'time',\r\n                }]\r\n            },\r\n        };\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <Container style={{width: '800px', marginTop: '80px'}}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"d-inline\">{this.state.name}(id: {this.state.sensorId})</h1>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/*{cont}*/}\r\n\r\n                    <div style={{marginTop: '80px'}}>\r\n                        <div className='header'>\r\n                            <h1 className='title'>Данные</h1>\r\n                        </div>\r\n                        <Line data={data} options={options} ref=\"line\"/>\r\n                    </div>\r\n\r\n\r\n                    <Container style={{width: '500px', marginTop: '60px'}}>\r\n                        <Form>\r\n\r\n                            <Form.Group controlId=\"formBasicStartDateTime\">\r\n                                <Form.Label>Дата начала</Form.Label>\r\n                                <Form.Control ref=\"d1\" type=\"date\" placeholder=\"Введите дату и время Начала\"/>\r\n                                <Form.Control ref=\"t1\" type=\"time\" placeholder=\"Введите время Начала\"/>\r\n                                <Form.Text>\r\n                                    Выберите дату и время Начала\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicEndDateTime\">\r\n                                <Form.Label>Дата конца</Form.Label>\r\n                                <Form.Control ref=\"d2\" type=\"date\" placeholder=\"Введите дату и время Конца\"/>\r\n                                <Form.Control ref=\"t2\" type=\"time\" placeholder=\"Введите время Конца\"/>\r\n                                <Form.Text>\r\n                                    Введите дату и время Конца\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-outline-primary float-end\"\r\n                                    style={{marginBottom: '60px'}} onClick={this.handleToggleClick} >Отправить</button>\r\n                        </Form>\r\n                    </Container>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Col, Container, Row, Alert, Form} from \"react-bootstrap\";\r\nimport authHeader from \"../components/authHeader\";\r\n\r\nexport default class Sensors extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.generate = this.generate.bind(this)\r\n        this.state = {isGenerated: false, token: ''}\r\n    }\r\n\r\n    generate(e){\r\n        e.preventDefault()\r\n\r\n        let options = {\r\n            Method: 'GET',\r\n            headers: Object.assign(authHeader(), {\r\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\r\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n            })\r\n        }\r\n        console.log(options)\r\n        let request = new Request(\"http://3.142.115.21/generateToken\", options)\r\n        fetch(request)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isGenerated: true,\r\n                        token: result.token\r\n                    });\r\n                })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{width: '600px', height: '800px', marginTop: '80px'}}>\r\n                <Row>\r\n                    <Col>\r\n                        <h1 className=\"d-inline\">Токен:</h1>\r\n                        <Alert variant='warning'>\r\n                            Внимание! После обновления страницы токен больше не будет доступен</Alert>\r\n                        {this.state.isGenerated && <Form.Control type=\"text\" value={this.state.token}/>}\r\n                        <button className=\"btn btn-outline-primary float-end\"\r\n                                onClick={this.generate}>Сгенерировать токен</button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\nimport {Form, Container, Alert} from \"react-bootstrap\";\nimport authHeader from \"./authHeader\";\n\nexport default class NewRoom extends Component{\n\n    constructor(props) {\n        super(props)\n        this.sendData = this.sendData.bind(this)\n        this.state = {houseId: parseInt(props.match.params.houseId, 10), error: false, isLoaded: false}\n    }\n\n    sendData(e){\n        e.preventDefault()\n        let data = {roomName: this.refs.name.value, roomColor: this.refs.color.value}\n\n        let options = {\n            method: 'POST',\n            headers: Object.assign(authHeader(), {\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Content-type': 'application/json'\n            }),\n            body: JSON.stringify(data)}\n        let request = new Request('http://3.142.115.21/houses/' + this.state.houseId + '/rooms', options)\n        fetch(request)\n            .then(res => res.ok ? res : Promise.reject(res))\n            .then(res => {\n                this.setState({\n                    isLoaded: true,\n                    error: false\n                })\n            })\n            .catch(() => {\n                    this.setState({\n                            isLoaded: true,\n                            error: true\n                        }\n                    );\n                }\n            )\n    }\n\n    render() {\n        return (\n            <>\n                <Container style={{width: '400px', marginTop: '80px'}}>\n                    <h1 className=\"text-center\">Добавить комнату</h1>\n                    <Form className=\"mt-4\">\n\n                        <Form.Label>Название комнаты</Form.Label>\n                        <Form.Control type=\"text\" id=\"name\" ref=\"name\"/>\n                        <Form.Label>Цвет комнаты</Form.Label>\n                        <Form.Control type=\"text\" id=\"color\" ref=\"color\"/>\n\n                        <button className=\"btn btn-outline-primary float-end mt-2\" onClick={this.sendData}>Отправить</button>\n\n                        <div style={{marginTop: '60px'}}>\n                            {this.state.isLoaded ?\n                                (this.state.error == false)\n                                    ? <Alert variant=\"success\">Комната успешно добавлена!</Alert>\n                                    : <Alert variant=\"danger\">Ошибка!</Alert>\n                                : <></>\n                            }\n                        </div>\n\n                    </Form>\n                </Container>\n            </>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Form, Container, Alert} from \"react-bootstrap\";\nimport authHeader from \"./authHeader\";\n\nexport default class NewSensor extends Component{\n\n    constructor(props) {\n        super(props)\n        this.sendData = this.sendData.bind(this)\n        this.state = {\n            houseId: parseInt(props.match.params.houseId, 10),\n            roomId: parseInt(props.match.params.roomId, 10),\n            error: false,\n            isLoaded: false}\n    }\n\n    sendData(e){\n        e.preventDefault()\n        let data = {name: this.refs.name.value, typeId: this.refs.type.value}\n\n        let options = {\n            method: 'POST',\n            headers: Object.assign(authHeader(), {\n                'Access-Control-Allow-Origin': 'http://3.142.115.21',\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n                'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Content-type': 'application/json'\n            }),\n            body: JSON.stringify(data)}\n        let request = new Request('http://3.142.115.21/houses/' + this.state.houseId + '/rooms/' + + this.state.roomId + '/sensors', options)\n        fetch(request)\n            .then(res => res.ok ? res : Promise.reject(res))\n            .then(res => {\n                this.setState({\n                    isLoaded: true,\n                    error: false\n                })\n            })\n            .catch(() => {\n                    this.setState({\n                            isLoaded: true,\n                            error: true\n                        }\n                    );\n                }\n            )\n    }\n\n    render() {\n        return (\n            <>\n\n                <Container style={{width: '400px', marginTop: '80px'}}>\n                    <h1 className=\"text-center\">Добавить датчик</h1>\n                    <Form className=\"mt-4\">\n\n                        <Form.Label>Название датчика</Form.Label>\n                        <Form.Control type=\"text\" id=\"name\" ref=\"name\"/>\n\n                        <Form.Label>Тип датчика</Form.Label>\n                        <Form.Control type=\"text\" id=\"type\" ref=\"type\"/>\n\n\n                        <button className=\"btn btn-outline-primary float-end mt-2\" onClick={this.sendData}>Отправить</button>\n\n                        <div style={{marginTop: '60px'}}>\n                            {this.state.isLoaded ?\n                                (this.state.error == false)\n                                    ? <Alert variant=\"success\">Датчик успешно добавлен!</Alert>\n                                    :<Alert variant=\"danger\">Ошибка!</Alert>\n                                : <></>\n                            }\n                        </div>\n\n                    </Form>\n                </Container>\n            </>\n        )\n    }\n}","import React, {Component} from \"react\";\r\nimport {Container, Navbar, Nav, Button} from \"react-bootstrap\";\r\nimport {Route, BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\nimport {PrivateRoute} from \"./PrivateRoute\";\r\n\r\nimport sas from '../assets/sus1.jpg'\r\nimport Home from \"../pages/Home\";\r\nimport Docs from \"../pages/Docs\";\r\nimport Sensors from \"../pages/Sensors\";\r\nimport Registration from \"../pages/Registration\";\r\nimport Entrance from \"../pages/Entrance\";\r\nimport House from \"./House\";\r\nimport NewHouse from \"./NewHouse\";\r\nimport Room from \"./Room\";\r\nimport Sensor from \"./Sensor\";\r\nimport Token from \"../pages/Token\";\r\nimport AuthService from \"./AuthService\";\r\nimport checkAuthorization from \"./checkAuthorization\";\r\nimport NewRoom from \"./NewRoom\";\r\nimport NewSensor from \"./NewSensor\";\r\n\r\n\r\nexport default class Header extends Component{\r\n\r\n    render() {\r\n\r\n        let isAuthorized = checkAuthorization()\r\n\r\n        return (\r\n            <>\r\n                <Navbar fixed=\"top\" collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                    <Container>\r\n                        <Navbar.Brand href=\"/\">\r\n                            <img\r\n                                src={sas}\r\n                                height=\"30\"\r\n                                width=\"30\"\r\n                                className=\"d-inline-block align-top\"\r\n                                alt=\"SAS\"\r\n                            />SAS\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\" style={{'justify-content': 'space-between'}}>\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link href=\"/\">Главная</Nav.Link>\r\n                                <Nav.Link href=\"/docs\">Документация</Nav.Link>\r\n                                {isAuthorized && <Nav.Link href=\"/table\">Датчики</Nav.Link>}\r\n                                {isAuthorized && <Nav.Link href=\"/token\">Токен</Nav.Link>}\r\n                            </Nav>\r\n                            <Nav className=\"mr-auto\" style={{'gap': '10px'}}>\r\n                                {isAuthorized && <Button onClick={AuthService.logout}\r\n                                                         variant=\"outline-info\" href=\"/entrance\">SIGN OUT</Button>}\r\n                                {!isAuthorized && <Button variant=\"outline-info\" href=\"/entrance\">SIGN IN</Button>}\r\n                                {!isAuthorized && <Button variant=\"outline-info\" href=\"/reg\">SIGN UP</Button>}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route exact path=\"/docs\" component={Docs}/>\r\n                        <PrivateRoute exact path=\"/table\" component={Sensors}/>\r\n                        <PrivateRoute exact path=\"/token\" component={Token}/>\r\n                        <PrivateRoute exact path=\"/table/addHouse\" component={NewHouse}/>\r\n                        <PrivateRoute exact path=\"/table/:houseId\" component={House}/>\r\n                        <PrivateRoute exact path=\"/table/:houseId/addRoom\" component={NewRoom}/>\r\n                        <PrivateRoute exact path=\"/table/:houseId/:roomId\" component={Room}/>\r\n                        <PrivateRoute exact path=\"/table/:houseId/:roomId/addSensor\" component={NewSensor}/>\r\n                        <PrivateRoute exact path=\"/table/:houseId/:roomId/:sensorId\" component={Sensor}/>\r\n                        <Route exect path=\"/reg\" component={Registration}/>\r\n                        <Route exect path=\"/entrance\" component={Entrance}/>\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </Router>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n      <>\n        <Header/>\n      </>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}